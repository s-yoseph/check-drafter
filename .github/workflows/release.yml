name: Release Drafter and Publisher
on:
  pull_request:
    types: [opened, reopened, synchronize, closed]
    branches:
      - develop
permissions:
  contents: write
  pull-requests: write
jobs:
  update_release_draft:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: release-drafter/release-drafter@v6
        with:
          config-name: release-drafter.yml
          commitish: develop
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish_draft:
    if: >
      github.event_name == 'pull_request' &&
      github.event.action == 'closed' &&
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'Publish')
    needs: update_release_draft
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Debug labels
        run: |
          echo "PR Labels: ${{ github.event.pull_request.labels.*.name }}"
      - name: Publish latest draft release
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const draft = releases.data.find(r => r.draft);
            if (!draft) {
              core.setFailed("No draft release found to publish.");
              return;
            }
            try {
              await github.rest.repos.updateRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: draft.id,
                draft: false,
                prerelease: false
              });
              console.log(`âœ… Draft release "${draft.tag_name}" published successfully!`);
            } catch (error) {
              core.setFailed(`Failed to publish release: ${error.message}`);
              throw error;
            }
